{"version":3,"sources":["components/DrugSearch.js","App.js","reportWebVitals.js","index.js"],"names":["DrugSearch","useState","searchTerm","setSearchTerm","info","setInfo","handleSubmit","a","axios","get","result","console","log","results","data","Container","Row","Col","Form","Group","Control","className","size","type","placeholder","value","onChange","e","target","Button","onClick","indications_and_usage","dosage_and_administration","dosage_forms_and_strengths","contraindications","warnings_and_cautions","adverse_reactions","drug_interactions","use_in_specific_populations","pregnancy","pediatric_use","geriatric_use","drug_abuse_and_dependence","controlled_substance","abuse","dependence","overdosage","description","clinical_pharmacology","mechanism_of_action","pharmacodynamics","pharmacokinetics","non_clinical_toxicology","how_supplied","information_for_patients","App","Tabs","defaultActiveKey","id","Tab","eventKey","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b4c1d1c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst DrugSearch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"Caffeine\");\n  const [info, setInfo] = useState({});\n  const handleSubmit = async () => {\n    const result = await axios.get(\n      `https://api.fda.gov/drug/label.json?search=description:${searchTerm}`\n    );\n    console.log(result);\n    // const { data } = result;\n    const { results } = result.data;\n\n    console.log(results);\n\n    setInfo({ ...results[0] });\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col>\n            <h1>Drug Search</h1>\n\n            <Form.Group>\n              <Form.Control\n                className=\"mt-5\"\n                size=\"lg\"\n                type=\"text\"\n                placeholder=\"Please enter the name of a drug you would like to search\"\n                value={searchTerm}\n                onChange={handleOnChange}\n              />\n              <Button className=\"mt-5\" onClick={handleSubmit} type=\"submit\">\n                Search\n              </Button>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"mt-5\">\n              {info.indications_and_usage && info.indications_and_usage[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.dosage_and_administration &&\n                info.dosage_and_administration[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.dosage_forms_and_strengths &&\n                info.dosage_forms_and_strengths[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.contraindications && info.contraindications[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.warnings_and_cautions && info.warnings_and_cautions[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.adverse_reactions && info.adverse_reactions[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.drug_interactions && info.drug_interactions[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.use_in_specific_populations &&\n                info.use_in_specific_populations[0]}\n            </div>\n            <div className=\"mt-5\">{info.pregnancy && info.pregnancy[0]}</div>\n            <div className=\"mt-5\">\n              {info.pediatric_use && info.pediatric_use[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.geriatric_use && info.geriatric_use[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.drug_abuse_and_dependence &&\n                info.drug_abuse_and_dependence[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.controlled_substance && info.controlled_substance[0]}\n            </div>\n            <div className=\"mt-5\">{info.abuse && info.abuse[0]}</div>\n            <div className=\"mt-5\">{info.dependence && info.dependence[0]}</div>\n            <div className=\"mt-5\">{info.overdosage && info.overdosage[0]}</div>\n            <div className=\"mt-5\">\n              {info.description && info.description[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.clinical_pharmacology && info.clinical_pharmacology[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.mechanism_of_action && info.mechanism_of_action[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.pharmacodynamics && info.pharmacodynamics[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.pharmacokinetics && info.pharmacokinetics[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.non_clinical_toxicology && info.non_clinical_toxicology[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.how_supplied && info.how_supplied[0]}\n            </div>\n            <div className=\"mt-5\">\n              {info.information_for_patients &&\n                info.information_for_patients[0]}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default DrugSearch;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport DrugSearch from \"./components/DrugSearch\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"home\" title=\"Home\">\n          <h1>Home</h1>\n        </Tab>\n        <Tab eventKey=\"profile\" title=\"Drug Search\">\n          <DrugSearch />\n        </Tab>\n        <Tab eventKey=\"contact\" title=\"Contact\">\n          <h1>Contact</h1>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}